# 인덱스에 벌크로 데이터 입력
POST my_index/_bulk
{"index":{"_id":1}}
{"message":"The quick brown fox"}
{"index":{"_id":2}}
{"message":"The quick brown fox jumps over the lazy dog"}
{"index":{"_id":3}}
{"message":"The quick brown fox jumps over the quick dog"}
{"index":{"_id":4}}
{"message":"Brown fox brown dog"}
{"index":{"_id":5}}
{"message":"Lazy jumping dog"}

# match_all
# 별다른 조건 없이 해당 인덱스의 모든 도큐먼트를 검색하는 쿼리.
# 검색 시 쿼리를 넣지 않으면 elasticsearch는 자동으로 match_all를 적용해서 해당 인덱스의 모든 도큐먼트를 검색.
# 두 예제는 결과가 동일하다.
1. GET my_index/_search
2.
GET my_index/_search
{
  "query":{
    "match_all":{ }
  }
}

# match
# 풀 텍스트 검색에 사용되는 가장 일반적인 쿼리이다.

# match 쿼리로 message 필드에서 dog 검색
GET my_index/_search
{
  "query": {
    "match": {
      "message": "dog"
    }
  }
}

# match 검색에 여러 개의 검색어를 집어넣게 되면 디폴트로 OR 조건으로 검색이 되어
# 입력된 검색어 별로 하나라도 포함된 모든 문서를 모두 검색한다.

# match 쿼리로 message 필드에서 quick dog 검색
GET my_index/_search
{
  "query": {
    "match": {
      "message": "quick dog"
    }
  }
}

# 검색어가 여럿일 때 검색 조건을 OR 가 아닌 AND 로 바꾸려면 operator 옵션을 사용할 수 있다.
# 이 경우 문법이 조금 달라지는데,
# <필드명>:<검색어>
# 형식으로 하던 것을
# <필드명>: { "query":<검색어>, "operator": }
# 와 같이 입력해야 한다. quick dog 를 AND 조건으로 검색하려면 다음과 같다.

# match 쿼리를 AND 조건으로 quick dog 검색
GET my_index/_search
{
  "query": {
    "match": {
      "message": {
        "query": "quick dog",
        "operator": "and"
      }
    }
  }
}

# match_phrase
# 검색어에서 공백을 포함해 정확히 일치하는 내용을 검색할 때 사용한다.
# 입력된 검색어를 순서까지 고려하여 검색을 수행한다.

# match_phrase 쿼리로 "lazy dog" 구문 검색
GET my_index/_search
{
  "query": {
    "match_phrase": {
      "message": "lazy dog"
    }
  }
}

#  match_phrase 쿼리는 slop 이라는 옵션을 이용하여 slop에 지정된 값 만큼
# 단어 사이에 다른 검색어가 끼어드는 것을 허용할 수 있다.

# match_phrase 쿼리에 slop:1 로 "lazy dog" 구문 검색
GET my_index/_search
{
  "query": {
    "match_phrase": {
      "message": {
        "query": "lazy dog",
        "slop": 1
      }
    }
  }
}

# slop의 크기를 1로 했기 때문에 lazy와 dog 사이에 jumping이 있는 "Lazy jumping dog" 값도 검색된다.
# match_phrase 쿼리와 slop을 이용하면 정확도를 조절해 가며 원하는 검색 결과의 범위를 넓힐 수 있다.
# slop을 너무 크게 하면 검색 범위가 넓어져 관련이 없는 결과가 나타날 확률도 높아지기 때문에
# 1 이상은 사용하지 않는 것을 권장한다.

# query_string
# URL검색에 사용하는 루씬의 검색 문법을 본문 검색에 이용하고 싶을 때 query_string 쿼리를 사용할 수 있다.

# query_string 쿼리 검색
GET my_index/_search
{
  "query": {
    "query_string": {
      "default_field": "message",
      "query": "(jumping AND lazy) OR \"quick dog\""
    }
  }
}

# message 필드에서 lazy와 jumping을 모두 포함하거나 또는 "quick dog" 구문을 포함하는 도큐먼트를 검색할때 사용한다.
# match_phrase 처럼 구문 검색을 할 때는 검색할 구문을 쌍따옴표 \" 안에 넣는다.

